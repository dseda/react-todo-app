{"version":3,"sources":["logo.svg","Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditting","task","handleClick","bind","toggleForm","handleUpdate","handleChange","handleTodoCompletion","e","this","remove","id","setState","target","value","preventDefault","update","toggleTodo","className","isDone","onClick","disabled","onSubmit","type","onChange","Component","NewTodoForm","handleSubmit","newTodo","uuid","done","addTodo","alert","htmlFor","name","TodoList","todos","todo","filter","updatedTask","updatedTodos","map","newTodos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8672086.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isEditting: false, task: this.props.task };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTodoCompletion = this.handleTodoCompletion.bind(this);\n  }\n  handleClick(e) {\n    this.props.remove(this.props.id);\n  }\n  handleChange(e) {\n    this.setState({ task: e.target.value });\n  }\n  toggleForm(e) {\n    this.setState({ isEditting: !this.state.isEditting });\n  }\n  handleUpdate(e) {\n    e.preventDefault();\n    this.props.update(this.props.id, this.state.task);\n    this.setState({ isEditting: false });\n  }\n  handleTodoCompletion() {\n    this.props.toggleTodo(this.props.id);\n  }\n  render() {\n    let isEditting = this.state.isEditting;\n    return (\n      <div>\n        <div className=\"Todo\">\n          <div\n            className={`NotDone ${this.props.isDone ? \"Done\" : \"\"}`}\n            onClick={this.handleTodoCompletion}\n          >\n            {/* <img src={tick} /> */}\n          </div>\n          <li>{this.props.task}</li>\n          <div className=\"Buttons\">\n            <button onClick={this.handleClick}>X</button>\n\n            <button onClick={this.toggleForm} disabled={isEditting}>\n              Edit\n            </button>\n          </div>\n        </div>\n        {isEditting ? (\n          <form onSubmit={this.handleUpdate}>\n            <input\n              type=\"text\"\n              value={this.state.task}\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./NewTodoForm.css\";\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({ task: e.target.value });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      ...this.state,\n      id: uuid(),\n      done: false,\n    };\n    if (newTodo.task !== \"\") {\n      this.props.addTodo(newTodo);\n      this.setState({ task: \"\" });\n    } else {\n      alert(\"Please enter a todo\");\n    }\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"new\">New Todo</label>\n        </div>\n        <input\n          key={this.state.id}\n          id=\"new\"\n          name=\"newTodo\"\n          type=\"text\"\n          value={this.state.task}\n          onChange={this.handleChange}\n        ></input>\n        <button>Add todo</button>\n      </form>\n    );\n  }\n}\n\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport \"./TodoList.css\";\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todos: [{ task: \"Add todo\", done: false }] };\n    this.addTodo = this.addTodo.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleTodo = this.toggleTodo.bind(this);\n  }\n\n  addTodo(todo) {\n    this.setState({\n      todos: [...this.state.todos, todo],\n    });\n  }\n\n  remove(id) {\n    this.setState({ todos: this.state.todos.filter((todo) => todo.id !== id) });\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  toggleTodo(id) {\n    const newTodos = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        return { ...todo, done: !todo.done };\n      }\n      return todo;\n    });\n    this.setState({ todos: newTodos });\n  }\n  render() {\n    const todos = this.state.todos.map((todo) => (\n      <Todo\n        toggleTodo={this.toggleTodo}\n        remove={this.remove}\n        update={this.update}\n        task={todo.task}\n        key={todo.id}\n        id={todo.id}\n        isDone={todo.done}\n      />\n    ));\n    return (\n      <div className=\"TodoList\">\n        <h1>Todo List</h1>\n        {todos}\n        <NewTodoForm addTodo={this.addTodo} />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}